---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app: rabbitmq
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
      containers:
      - name: rabbitmq
        image: {{ .Values.rabbitmq_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        ports:
        - containerPort: 5672
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq/conf.d/consumer-settings.conf
            subPath: consumer-settings.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-flower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-flower
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app: celery-flower
    spec:
      containers:
      - name: flower
        image: {{ .Values.flower_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        ports:
        - containerPort: 5555
        env:
          - name: CELERY_BROKER_URL
            value: "amqp://guest:guest@rabbitmq-service:5672"
          - name: CELERY_RESULT_BACKEND
            value: "redis://redis:6379/1" # "rpc://"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fitness-worker
  labels:
    app: fitness-worker
spec:
  replicas: {{ .Values.worker_count }}
  selector:
    matchLabels:
      app: fitness-worker
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        app: fitness-worker
    spec:
      volumes:
        - name: dataset
          persistentVolumeClaim:
            claimName: autotm-datasets
        - name: config-volume
          configMap:
            name: autotm-worker-config
        - name: mlflow-vol
          persistentVolumeClaim:
            claimName: autotm-mlflow-artifact-store
      containers:
      - name: worker
        image: {{ .Values.worker_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        volumeMounts:
          - name: dataset
            mountPath: {{ .Values.worker_datasets_dir_path }}
          - name: config-volume
            mountPath: /etc/fitness/datasets-config.yaml
            subPath: datasets-config.yaml
          - mountPath: "/var/lib/mlruns"
            name: mlflow-vol
        env:
          - name: CELERY_BROKER_URL
            value: "amqp://guest:guest@rabbitmq-service:5672"
          - name: CELERY_RESULT_BACKEND
            value: "redis://redis:6379/1" # "rpc://"
          - name: NUM_PROCESSORS
            value: {{ .Values.worker_cpu }}
          - name: DATASETS_CONFIG
            value: /etc/fitness/datasets-config.yaml
          - name: MLFLOW_TRACKING_URI
            value: {{ .Values.worker_mlflow_url }}
          # see: https://github.com/mongodb/mongo-python-driver/blob/c8d920a46bfb7b054326b3e983943bfc794cb676/pymongo/mongo_client.py
          - name: MONGO_URI
            value: {{ .Values.worker_mongo_url }}
          - name: MONGO_COLLECTION
            value: {{ .Values.worker_mongo_collection }}
        resources:
          requests:
            memory: {{ .Values.worker_mem }}
            cpu: {{ .Values.worker_cpu }}
          limits:
            memory: {{ .Values.worker_mem }}
            cpu: {{ .Values.worker_cpu }}
