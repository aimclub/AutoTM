##################
#### MLFlow
##################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}mlflow
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}mlflow
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}mlflow
    spec:
      volumes:
        - name: mlflow-vol
          persistentVolumeClaim:
            claimName: {{ include "autotm.prefix" . }}mlflow-artifact-store-pvc
      containers:
      - name: mlflow
        image: {{ .Values.mlflow_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        args: [
            "--backend-store-uri", "mysql+pymysql://mlflow:mlflow@mlflow-db:3306/mlflow",
            "--default-artifact-root", "/var/lib/mlruns",
            "--host", "0.0.0.0"
        ]
        volumeMounts:
          - mountPath: "/var/lib/mlruns"
            name: mlflow-vol
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}mlflow-db
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}mlflow-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}mlflow-db
    spec:
      volumes:
        - name: mlflow-db-vol
          persistentVolumeClaim:
            claimName: {{ include "autotm.prefix" . }}mlflow-db-pvc
        - name: mysql-cnf
          configMap:
            name: mlflow-mysql-cnf
            items:
              - key: my.cnf
                path: my.cnf
      containers:
      - name: mlflow-db
        image: {{ .Values.mysql_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        env:
          - name: MYSQL_DATABASE
            value: mlflow
          - name: MYSQL_USER
            value: mlflow
          - name: MYSQL_PASSWORD
            value: mlflow
          - name: MYSQL_ROOT_PASSWORD
            value: mlflow
        volumeMounts:
          - mountPath: "/var/lib/mysql"
            name: mlflow-db-vol
          - mountPath: /etc/mysql/my.cnf
            name: mysql-cnf
            subPath: my.cnf
        ports:
        - containerPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}mlflow-db-phpmyadmin
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}mlflow-db-phpmyadmin
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}mlflow-db-phpmyadmin
    spec:
      containers:
      - name: phpmyadmin
        image: {{ .Values.phpmyadmin_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        env:
          - name: PMA_HOST
            value: mlflow-db
          - name: PMA_PORT
            value: 3306
          - name: PMA_USER
            value: mlflow
          - name: PMA_PASSWORD
            value: mlflow
        ports:
        - containerPort: 80
###################
##### Mongo
###################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}mongo-tm-experiments-db
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}mongo-tm-experiments-db
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}mongo-tm-experiments-db
    spec:
      tolerations:
        - key: "node.kubernetes.io/disk-pressure"
          operator: "Exists"
          effect: "NoSchedule"
      volumes:
        - name: mongo-vol
          persistentVolumeClaim:
            claimName: {{ include "autotm.prefix" . }}mongo-tm-experiments-pvc
      containers:
      - name: mongo
        image: {{ .Values.mongo_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        args: [
            "--dbpath", "/var/lib/mongodb",
            "--bind_ip_all"
        ]
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: mongoadmin
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: secret
        volumeMounts:
          - mountPath: "/var/lib/mongodb"
            name: mongo-vol
        ports:
        - containerPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}mongo-express-tm-experiments
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}mongo-express-tm-experiments
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}mongo-express-tm-experiments
    spec:
#      volumes:
#        - name: wait-for-vol
#          configMap:
#            name: wait-for-script
#            defaultMode: 0777
      containers:
      - name: mongo-express
        image: {{ .Values.mongoexpress_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
#        command: [ "/bin/sh" ]
#        args: [ "/wait-for.sh", "$ME_CONFIG_MONGODB_SERVER:$ME_CONFIG_MONGODB_PORT", "--", "tini", "--", "/docker-entrypoint.sh" ]
        env:
          - name: ME_CONFIG_MONGODB_ADMINUSERNAME
            value: mongoadmin
          - name: ME_CONFIG_MONGODB_ADMINPASSWORD
            value: secret
          - name: ME_CONFIG_MONGODB_SERVER
            value: mongo-tm-experiments-db
          - name: ME_CONFIG_MONGODB_PORT
            value: "27017"
        ports:
        - containerPort: 8081
#        volumeMounts:
#          - mountPath: "/wait-for.sh"
#            name: wait-for-vol
#            subPath: wait-for.sh
###################
##### Celery & Fitness Workers
###################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}rabbitmq
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}rabbitmq
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}rabbitmq
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
      containers:
      - name: rabbitmq
        image: {{ .Values.rabbitmq_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        ports:
        - containerPort: 5672
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq/conf.d/consumer-settings.conf
            subPath: consumer-settings.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}redis
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}redis
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}celery-flower
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}celery-flower
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}celery-flower
    spec:
      containers:
      - name: flower
        image: {{ .Values.flower_image }}
        imagePullPolicy: {{ .Values.pull_policy }}
        ports:
        - containerPort: 5555
        env:
          - name: CELERY_BROKER_URL
            value: "amqp://guest:guest@rabbitmq-service:5672"
          - name: CELERY_RESULT_BACKEND
            value: "redis://redis:6379/1" # "rpc://"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "autotm.prefix" . }}fitness-worker
  labels:
    {{- range $key, $val := .Values.required_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    app: fitness-worker
spec:
  replicas: {{ .Values.worker_count }}
  selector:
    matchLabels:
      app: {{ include "autotm.prefix" . }}fitness-worker
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
      labels:
        {{- range $key, $val := .Values.required_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        app: {{ include "autotm.prefix" . }}fitness-worker
    spec:
      volumes:
        - name: dataset
          persistentVolumeClaim:
            claimName: {{ include "autotm.prefix" . }}autotm-datasets
        - name: config-volume
          configMap:
            name: autotm-worker-config
        {{- if .Values.worker_mlflow_url }}
        - name: mlflow-vol
          persistentVolumeClaim:
            claimName: {{ include "autotm.prefix" . }}autotm-mlflow-artifact-store
        {{- end }}
      containers:
      - name: worker
        image: {{ .Values.worker_image }}
        imagePullPolicy: {{ .Values.worker_image_pull_policy }}
        volumeMounts:
          - name: dataset
            mountPath: {{ .Values.worker_datasets_dir_path }}
          - name: config-volume
            mountPath: /etc/fitness/datasets-config.yaml
            subPath: datasets-config.yaml
          {{- if .Values.worker_mlflow_url }}
          - mountPath: "/var/lib/mlruns"
            name: mlflow-vol
          {{- end }}
        env:
          - name: CELERY_BROKER_URL
            value: "amqp://guest:guest@rabbitmq-service:5672"
          - name: CELERY_RESULT_BACKEND
            value: "redis://redis:6379/1" # "rpc://"
          - name: NUM_PROCESSORS
            value: {{ .Values.worker_cpu }}
          - name: DATASETS_CONFIG
            value: /etc/fitness/datasets-config.yaml
          {{- if .Values.worker_mlflow_url }}
          - name: MLFLOW_TRACKING_URI
            value: {{ .Values.worker_mlflow_url }}
          {{- end }}
          # see: https://github.com/mongodb/mongo-python-driver/blob/c8d920a46bfb7b054326b3e983943bfc794cb676/pymongo/mongo_client.py
          {{- if .Values.worker_mongo_url }}
          - name: MONGO_URI
            value: {{ .Values.worker_mongo_url }}
          - name: MONGO_COLLECTION
            value: {{ .Values.worker_mongo_collection }}
          {{- end }}
        resources:
          requests:
            memory: {{ .Values.worker_mem }}
            cpu: {{ .Values.worker_cpu }}
          limits:
            memory: {{ .Values.worker_mem }}
            cpu: {{ .Values.worker_cpu }}
